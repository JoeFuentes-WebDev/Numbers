{"ast":null,"code":"var _jsxFileName = \"/Users/joefuentes/Work/Sandbox/Numbers/src/Numbers.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport \"./Numbers.scss\";\nimport { NumbersData } from './data/NumbersData';\nimport { utils } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Numbers = () => {\n  _s();\n  const [correctGuess, setCorrectGuess] = useState(null);\n  const [guess, setGuess] = useState(null);\n  const [numberOfGuesses, setNumberOfGuesses] = useState(0);\n  const [totalGuesses, setTotalGuesses] = useState(0);\n  const [picked, setPicked] = useState([]);\n  const [lang, setLang] = useState('english');\n  const numbers = [];\n  for (let i = 1; i <= NumbersData.challenges[lang].length; i++) {\n    numbers.push({\n      key: i,\n      value: NumbersData.answers[lang][i - 1]\n    });\n  }\n  const [tiles, setTiles] = useState(numbers);\n  const [guessList, setGuessList] = useState([...numbers]);\n  const [numberNames, setNumberNames] = useState(NumbersData.challenges[lang]);\n  const [challenge, setChallenge] = useState(utils.randomNumber(NumbersData.challenges[lang].length));\n  const [gameOver, setGameOver] = useState(false);\n  const reset = () => {\n    setCorrectGuess(false);\n    setGuess(null);\n    setNumberOfGuesses(0);\n    setTotalGuesses(0);\n    setGameOver(false);\n    setChallenge(utils.randomNumber(NumbersData.challenges[lang].length));\n    setPicked([]);\n  };\n  const setLanguage = language => {\n    // reset()\n    setLang(language);\n    const numbers = [];\n    for (let i = 1; i <= NumbersData.challenges[language].length; i++) {\n      numbers.push({\n        key: i,\n        value: NumbersData.answers[language][i - 1]\n      });\n    }\n    setGuessList([...numbers]);\n    setNumberNames(NumbersData.challenges[language]);\n    setTiles([...numbers]);\n    reset();\n  };\n  const getNumber = e => {\n    const correct = parseInt(e.target.id) === challenge;\n    setCorrectGuess(correct);\n    if (correct) {\n      setPicked([...picked, challenge]);\n      setNumberOfGuesses(0);\n      const updatedGuessList = [...guessList.filter(g => g.key !== challenge)];\n      setGuessList(updatedGuessList);\n      if (updatedGuessList.length) {\n        setChallenge(updatedGuessList[utils.randomNumber(updatedGuessList.length) - 1].key);\n      } else {\n        setGameOver(true);\n      }\n    }\n    setGuess(parseInt(e.target.id));\n    setNumberOfGuesses(prev => prev + 1);\n    setTotalGuesses(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setLanguage(e.target.value),\n      children: Object.keys(NumbersData.answers).map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: lang\n      }, lang, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 63\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset\",\n      onClick: reset,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [(numberNames.length / totalGuesses * 100).toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: numberNames[challenge - 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), tiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numbers\",\n      children: tiles.map(n => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => getNumber(e),\n        id: n.key,\n        disabled: picked.includes(n.key),\n        className: [gameOver ? \"game-over\" : correctGuess && guess === n.key ? \"right\" : !correctGuess && guess === n.key ? \"wrong\" : numberOfGuesses > 3 && challenge === n.key ? \" hint\" : \"\", picked.includes(n.key) ? \" picked\" : \"\"].join(' '),\n        children: n.value\n      }, n.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true);\n};\n_s(Numbers, \"2cau7WnwoOURkmDeNfE5WaMR6Qg=\");\n_c = Numbers;\nvar _c;\n$RefreshReg$(_c, \"Numbers\");","map":{"version":3,"names":["useState","NumbersData","utils","jsxDEV","_jsxDEV","Fragment","_Fragment","Numbers","_s","correctGuess","setCorrectGuess","guess","setGuess","numberOfGuesses","setNumberOfGuesses","totalGuesses","setTotalGuesses","picked","setPicked","lang","setLang","numbers","i","challenges","length","push","key","value","answers","tiles","setTiles","guessList","setGuessList","numberNames","setNumberNames","challenge","setChallenge","randomNumber","gameOver","setGameOver","reset","setLanguage","language","getNumber","e","correct","parseInt","target","id","updatedGuessList","filter","g","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","Object","keys","map","className","onClick","toFixed","n","disabled","includes","join","_c","$RefreshReg$"],"sources":["/Users/joefuentes/Work/Sandbox/Numbers/src/Numbers.js"],"sourcesContent":["import { useState } from 'react';\nimport \"./Numbers.scss\";\nimport { NumbersData } from './data/NumbersData'\nimport { utils } from './utils';\n\nexport const Numbers = () => {\n\n\n    const [correctGuess, setCorrectGuess] = useState(null)\n    const [guess, setGuess] = useState(null)\n    const [numberOfGuesses, setNumberOfGuesses] = useState(0)\n    const [totalGuesses, setTotalGuesses] = useState(0);\n    const [picked, setPicked] = useState([])\n    const [lang, setLang] = useState('english')\n\n    const numbers = [];\n    for (let i = 1; i <= NumbersData.challenges[lang].length; i++) {\n        numbers.push({ key: i, value: NumbersData.answers[lang][i - 1] })\n    }\n    const [tiles, setTiles] = useState(numbers);\n    const [guessList, setGuessList] = useState([...numbers]);\n    const [numberNames, setNumberNames] = useState(NumbersData.challenges[lang])\n\n    const [challenge, setChallenge] = useState(utils.randomNumber(NumbersData.challenges[lang].length));\n    const [gameOver, setGameOver] = useState(false)\n\n    const reset = () => {\n        setCorrectGuess(false);\n        setGuess(null);\n        setNumberOfGuesses(0)\n        setTotalGuesses(0);\n        setGameOver(false);\n        setChallenge(utils.randomNumber(NumbersData.challenges[lang].length))\n        setPicked([]);\n    }\n\n    const setLanguage = language => {\n        // reset()\n        setLang(language)\n        const numbers = [];\n        for (let i = 1; i <= NumbersData.challenges[language].length; i++) {\n            numbers.push({ key: i, value: NumbersData.answers[language][i - 1] })\n        }\n        setGuessList([...numbers]);\n        setNumberNames(NumbersData.challenges[language]);\n        setTiles([...numbers]);\n        reset()\n    }\n\n    const getNumber = e => {\n        const correct = parseInt(e.target.id) === challenge\n        setCorrectGuess(correct);\n        if (correct) {\n            setPicked([...picked, challenge]);\n            setNumberOfGuesses(0);\n            const updatedGuessList = [...guessList.filter(g => g.key !== challenge)];\n            setGuessList(updatedGuessList)\n            if (updatedGuessList.length) {\n                setChallenge(updatedGuessList[utils.randomNumber(updatedGuessList.length) - 1].key)\n            } else {\n                setGameOver(true)\n            }\n        }\n        setGuess(parseInt(e.target.id))\n        setNumberOfGuesses(prev => prev + 1)\n        setTotalGuesses(prev => prev + 1)\n    }\n\n    return (\n        <>\n            <h1>Numbers</h1>\n            <select onChange={e => setLanguage(e.target.value)}>\n                {Object.keys(NumbersData.answers).map(lang => <option key={lang}>{lang}</option>)}\n            </select>\n            <button className=\"reset\" onClick={reset}>Reset Game</button>\n            {gameOver ?\n                <h5>{(numberNames.length / totalGuesses * 100).toFixed(2)}%</h5> :\n                <h4>{numberNames[challenge - 1]}</h4>\n            }\n\n            {tiles.length > 0 && <div className=\"numbers\">\n                {tiles.map(n => <button onClick={e => getNumber(e)} id={n.key} key={n.key}\n                    disabled={picked.includes(n.key)}\n                    className={[\n                        gameOver ? \"game-over\" :\n                            correctGuess && guess === n.key ? \"right\" :\n                                !correctGuess && guess === n.key ? \"wrong\" :\n                                    numberOfGuesses > 3 && challenge === n.key ? \" hint\" :\n                                        \"\", picked.includes(n.key) ? \" picked\" : \"\"].join(' ')}>\n                    {n.value}\n                </button>\n                )}\n            </div>}\n\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}