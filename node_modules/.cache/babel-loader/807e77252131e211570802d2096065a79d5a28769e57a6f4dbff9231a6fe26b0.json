{"ast":null,"code":"var _jsxFileName = \"/Users/joefuentes/Work/Sandbox/numbers-game/src/Numbers.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport \"./Numbers.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Numbers = () => {\n  _s();\n  const [correctGuess, setCorrectGuess] = useState(null);\n  const [guess, setGuess] = useState(null);\n  const [numberOfGuesses, setNumberOfGuesses] = useState(0);\n  const [totalGuesses, setTotalGuesses] = useState(0);\n  const count = 9;\n  const numbers = [];\n  const language = {\n    english: ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'],\n    french: ['un', 'due', 'trois', 'quatre', 'cinq', 'sis', 'sette', 'ouit', 'neve'],\n    japanese: ['いち', 'に', 'さん', 'し、よん', 'ご', 'ろく', 'しち、なな', 'はち', 'きゅう、く'],\n    spanish: ['uno', 'dos', 'tres', 'cuatro', 'cinco', 'seis', 'siete', 'ocho', 'nueve']\n  };\n  const [numberNames, setNumberNames] = useState(language['english']);\n  for (let i = 1; i <= count; i++) {\n    numbers.push({\n      key: i,\n      value: i\n    });\n  }\n  const randomNumber = count => {\n    return Math.ceil(Math.random() * count);\n  };\n  const [challenge, setChallenge] = useState(4);\n  const [guessList, setGuessList] = useState(numbers);\n  const [gameOver, setGameOver] = useState(false);\n  const reset = () => {\n    setCorrectGuess(false);\n    setGuess(null);\n    setNumberOfGuesses(0);\n    setTotalGuesses(0);\n    setGameOver(false);\n    setGuessList(numbers);\n    setChallenge(randomNumber(count));\n  };\n  useEffect(() => {\n    if (correctGuess) {\n      setNumberOfGuesses(0);\n      const updatedGuessList = guessList.filter(g => g.key !== challenge);\n      setGuessList(updatedGuessList);\n      if (updatedGuessList.length) {\n        setChallenge(updatedGuessList[randomNumber(updatedGuessList.length) - 1].key);\n      } else {\n        setGameOver(true);\n      }\n    }\n  }, [totalGuesses]);\n  const getNumber = e => {\n    setCorrectGuess(parseInt(e.target.id) === challenge);\n    setGuess(parseInt(e.target.id));\n    setNumberOfGuesses(prev => prev + 1);\n    setTotalGuesses(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setNumberNames(language[e.target.value]),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"english\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"spanish\",\n        children: \"Spanish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"french\",\n        children: \"French\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"japanese\",\n        children: \"Japanese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Game Over -  \", count / totalGuesses * 100, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"click  \", numberNames[challenge - 1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 79\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numbers\",\n      children: numbers.map(n => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => getNumber(e),\n        id: n.key,\n        className: gameOver ? \"game-over\" : correctGuess && guess === n.key ? \"right\" : !correctGuess && guess === n.key ? \"wrong\" : numberOfGuesses > 2 && challenge === n.key ? \" hint\" : \"\",\n        children: n.value\n      }, n.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true);\n};\n_s(Numbers, \"VXW1zoI+I96T2sU+P6iQ3FHYaZA=\");\n_c = Numbers;\nvar _c;\n$RefreshReg$(_c, \"Numbers\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Numbers","_s","correctGuess","setCorrectGuess","guess","setGuess","numberOfGuesses","setNumberOfGuesses","totalGuesses","setTotalGuesses","count","numbers","language","english","french","japanese","spanish","numberNames","setNumberNames","i","push","key","value","randomNumber","Math","ceil","random","challenge","setChallenge","guessList","setGuessList","gameOver","setGameOver","reset","updatedGuessList","filter","g","length","getNumber","e","parseInt","target","id","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","className","map","n","_c","$RefreshReg$"],"sources":["/Users/joefuentes/Work/Sandbox/numbers-game/src/Numbers.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport \"./Numbers.css\";\n\nexport const Numbers = () => {\n\n    const [correctGuess, setCorrectGuess] = useState(null)\n    const [guess, setGuess] = useState(null)\n    const [numberOfGuesses, setNumberOfGuesses] = useState(0)\n    const [totalGuesses, setTotalGuesses] = useState(0)\n    const count = 9;\n    const numbers = [];\n\n    const language = {\n        english: ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'],\n        french: ['un', 'due', 'trois', 'quatre', 'cinq', 'sis', 'sette', 'ouit', 'neve'],\n        japanese: ['いち', 'に', 'さん', 'し、よん', 'ご', 'ろく', 'しち、なな', 'はち', 'きゅう、く'],\n        spanish: ['uno', 'dos', 'tres', 'cuatro', 'cinco', 'seis', 'siete', 'ocho', 'nueve']\n    }\n\n    const [numberNames, setNumberNames] = useState(language['english'])\n\n    for (let i = 1; i <= count; i++) {\n        numbers.push({ key: i, value: i })\n    }\n    const randomNumber = count => {\n        return Math.ceil(Math.random() * count);\n    }\n    const [challenge, setChallenge] = useState(4);\n    const [guessList, setGuessList] = useState(numbers);\n    const [gameOver, setGameOver] = useState(false)\n\n    const reset = () => {\n        setCorrectGuess(false);\n        setGuess(null);\n        setNumberOfGuesses(0)\n        setTotalGuesses(0);\n        setGameOver(false);\n        setGuessList(numbers)\n        setChallenge(randomNumber(count))\n    }\n\n    useEffect(() => {\n        if (correctGuess) {\n            setNumberOfGuesses(0);\n            const updatedGuessList = guessList.filter(g => g.key !== challenge);\n            setGuessList(updatedGuessList)\n            if (updatedGuessList.length) {\n                setChallenge(updatedGuessList[randomNumber(updatedGuessList.length) - 1].key)\n            } else {\n                setGameOver(true)\n            }\n        }\n    }, [totalGuesses]);\n\n    const getNumber = e => {\n        setCorrectGuess(parseInt(e.target.id) === challenge)\n        setGuess(parseInt(e.target.id))\n        setNumberOfGuesses(prev => prev + 1)\n        setTotalGuesses(prev => prev + 1)\n    }\n    return (\n        <>\n            <h1>numbers</h1>\n            <select onChange={e => setNumberNames(language[e.target.value])}>\n                <option value='english'>English</option>\n                <option value='spanish'>Spanish</option>\n                <option value='french'>French</option>\n                <option value='japanese'>Japanese</option>\n            </select>\n            <button onClick={reset}>Reset Game</button>\n            {gameOver ? <h4>Game Over -  {count / totalGuesses * 100}%</h4> : <h4>click  {numberNames[challenge - 1]}</h4>}\n\n            <div className=\"numbers\">\n                {numbers.map(n => <button onClick={e => getNumber(e)} id={n.key} key={n.key}\n                    className={\n                        gameOver ? \"game-over\" :\n                            correctGuess && guess === n.key ? \"right\" :\n                                !correctGuess && guess === n.key ? \"wrong\" :\n                                    numberOfGuesses > 2 && challenge === n.key ? \" hint\" :\n                                        \"\"}>{n.value}</button>\n                )}\n            </div>\n\n            {gameOver && <div></div>}\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}