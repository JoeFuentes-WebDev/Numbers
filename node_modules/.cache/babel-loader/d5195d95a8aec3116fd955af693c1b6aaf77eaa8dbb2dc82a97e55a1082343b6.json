{"ast":null,"code":"var _jsxFileName = \"/Users/joefuentes/Work/Sandbox/numbers-game/src/Numbers.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport \"./Numbers.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Numbers = () => {\n  _s();\n  const [correctGuess, setCorrectGuess] = useState(null);\n  const [guess, setGuess] = useState(null);\n  const [numberOfGuesses, setNumberOfGuesses] = useState(0);\n  const [totalGuesses, setTotalGuesses] = useState(0);\n  const [picked, setPicked] = useState([]);\n  const count = 9;\n  const numbers = [];\n  const language = {\n    english: ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'],\n    italian: ['uno', 'due', 'tre', 'qyattro', 'cinque', 'sei', 'sette', 'otto', 'nove'],\n    french: ['un', 'deux', 'trois', 'quatre', 'cinq', 'six', 'sept', 'huit', 'neuf'],\n    japanese: ['いち', 'に', 'さん', 'し、よん', 'ご', 'ろく', 'しち、なな', 'はち', 'きゅう、く'],\n    spanish: ['uno', 'dos', 'tres', 'cuatro', 'cinco', 'seis', 'siete', 'ocho', 'nueve']\n  };\n  const [numberNames, setNumberNames] = useState(language['english']);\n  for (let i = 1; i <= count; i++) {\n    numbers.push({\n      key: i,\n      value: i\n    });\n  }\n  const randomNumber = count => {\n    return Math.ceil(Math.random() * count);\n  };\n  const [challenge, setChallenge] = useState(4);\n  const [guessList, setGuessList] = useState(numbers);\n  const [gameOver, setGameOver] = useState(false);\n  const reset = () => {\n    setCorrectGuess(false);\n    setGuess(null);\n    setNumberOfGuesses(0);\n    setTotalGuesses(0);\n    setGameOver(false);\n    setGuessList(numbers);\n    setChallenge(randomNumber(count));\n    setPicked([]);\n  };\n  useEffect(() => {\n    if (correctGuess) {\n      setNumberOfGuesses(0);\n      const updatedGuessList = guessList.filter(g => g.key !== challenge);\n      setGuessList(updatedGuessList);\n      if (updatedGuessList.length) {\n        setChallenge(updatedGuessList[randomNumber(updatedGuessList.length) - 1].key);\n      } else {\n        setGameOver(true);\n      }\n      // console.log({ picked })\n    }\n  }, [totalGuesses]);\n  const getNumber = e => {\n    const correct = parseInt(e.target.id) === challenge;\n    setCorrectGuess(correct);\n    if (correct) setPicked([...picked, challenge]);\n    setGuess(parseInt(e.target.id));\n    setNumberOfGuesses(prev => prev + 1);\n    setTotalGuesses(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setNumberNames(language[e.target.value]),\n      children: Object.keys(language).map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: lang\n      }, lang, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 52\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Game Over :  \", (count / totalGuesses * 100).toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\\"\", numberNames[challenge - 1], \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 92\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numbers\",\n      children: numbers.map(n => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => getNumber(e),\n        id: n.key,\n        className: [gameOver ? \"game-over\" : correctGuess && guess === n.key ? \"right\" : !correctGuess && guess === n.key ? \"wrong\" : numberOfGuesses > 2 && challenge === n.key ? \" hint\" : \"\", picked.includes(n.key) ? \" picked\" : \"\"].join(' '),\n        children: n.value\n      }, n.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true);\n};\n_s(Numbers, \"E0k8b38kJO/mb2gp/WyiffZr24M=\");\n_c = Numbers;\nvar _c;\n$RefreshReg$(_c, \"Numbers\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Numbers","_s","correctGuess","setCorrectGuess","guess","setGuess","numberOfGuesses","setNumberOfGuesses","totalGuesses","setTotalGuesses","picked","setPicked","count","numbers","language","english","italian","french","japanese","spanish","numberNames","setNumberNames","i","push","key","value","randomNumber","Math","ceil","random","challenge","setChallenge","guessList","setGuessList","gameOver","setGameOver","reset","updatedGuessList","filter","g","length","getNumber","e","correct","parseInt","target","id","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","Object","keys","map","lang","onClick","toFixed","className","n","includes","join","_c","$RefreshReg$"],"sources":["/Users/joefuentes/Work/Sandbox/numbers-game/src/Numbers.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport \"./Numbers.css\";\n\nexport const Numbers = () => {\n\n    const [correctGuess, setCorrectGuess] = useState(null)\n    const [guess, setGuess] = useState(null)\n    const [numberOfGuesses, setNumberOfGuesses] = useState(0)\n    const [totalGuesses, setTotalGuesses] = useState(0);\n    const [picked, setPicked] = useState([])\n    const count = 9;\n    const numbers = [];\n\n    const language = {\n        english: ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'],\n        italian: ['uno', 'due', 'tre', 'qyattro', 'cinque', 'sei', 'sette', 'otto', 'nove'],\n        french: ['un', 'deux', 'trois', 'quatre', 'cinq', 'six', 'sept', 'huit', 'neuf'],\n        japanese: ['いち', 'に', 'さん', 'し、よん', 'ご', 'ろく', 'しち、なな', 'はち', 'きゅう、く'],\n        spanish: ['uno', 'dos', 'tres', 'cuatro', 'cinco', 'seis', 'siete', 'ocho', 'nueve']\n    }\n\n    const [numberNames, setNumberNames] = useState(language['english'])\n\n    for (let i = 1; i <= count; i++) {\n        numbers.push({ key: i, value: i })\n    }\n    const randomNumber = count => {\n        return Math.ceil(Math.random() * count);\n    }\n    const [challenge, setChallenge] = useState(4);\n    const [guessList, setGuessList] = useState(numbers);\n    const [gameOver, setGameOver] = useState(false)\n\n    const reset = () => {\n        setCorrectGuess(false);\n        setGuess(null);\n        setNumberOfGuesses(0)\n        setTotalGuesses(0);\n        setGameOver(false);\n        setGuessList(numbers)\n        setChallenge(randomNumber(count))\n        setPicked([])\n    }\n\n    useEffect(() => {\n        if (correctGuess) {\n            setNumberOfGuesses(0);\n            const updatedGuessList = guessList.filter(g => g.key !== challenge);\n            setGuessList(updatedGuessList)\n            if (updatedGuessList.length) {\n                setChallenge(updatedGuessList[randomNumber(updatedGuessList.length) - 1].key)\n            } else {\n                setGameOver(true)\n            }\n            // console.log({ picked })\n        }\n    }, [totalGuesses]);\n\n    const getNumber = e => {\n        const correct = parseInt(e.target.id) === challenge\n        setCorrectGuess(correct)\n        if (correct) setPicked([...picked, challenge])\n        setGuess(parseInt(e.target.id))\n        setNumberOfGuesses(prev => prev + 1)\n        setTotalGuesses(prev => prev + 1)\n    }\n    return (\n        <>\n            <h1>numbers</h1>\n            <select onChange={e => setNumberNames(language[e.target.value])}>\n                {Object.keys(language).map(lang => <option key={lang}>{lang}</option>)}\n            </select>\n            <button onClick={reset}>Reset Game</button>\n            {gameOver ? <h4>Game Over :  {(count / totalGuesses * 100).toFixed(2)}%</h4> : <h4>\"{numberNames[challenge - 1]}\"</h4>}\n\n            <div className=\"numbers\">\n                {numbers.map(n => <button onClick={e => getNumber(e)} id={n.key} key={n.key}\n                    className={[\n                        gameOver ? \"game-over\" :\n                            correctGuess && guess === n.key ? \"right\" :\n                                !correctGuess && guess === n.key ? \"wrong\" :\n                                    numberOfGuesses > 2 && challenge === n.key ? \" hint\" :\n                                        \"\", picked.includes(n.key) ? \" picked\" : \"\"].join(' ')}>{n.value}</button>\n                )}\n            </div>\n\n            {gameOver && <div></div>}\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}