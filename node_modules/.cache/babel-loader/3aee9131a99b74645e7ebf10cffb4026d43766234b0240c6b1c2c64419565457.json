{"ast":null,"code":"var _jsxFileName = \"/Users/joefuentes/Work/Sandbox/numbers-game/src/Numbers.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport \"./Numbers.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Numbers = () => {\n  _s();\n  const [correctGuess, setCorrectGuess] = useState(null);\n  const [guess, setGuess] = useState(null);\n  const [numberOfGuesses, setNumberOfGuesses] = useState(0);\n  const count = 9;\n  const numbers = [];\n  const challenge = 4;\n  useEffect(() => {\n    if (numberOfGuesses >= 3) {\n      setNumberOfGuesses(0);\n      setAnswer(challenge);\n    }\n  }, [numberOfGuesses]);\n  const getNumber = e => {\n    setCorrectGuess(parseInt(e.target.id) === challenge);\n    setGuess(parseInt(e.target.id));\n    setNumberOfGuesses(prev => prev + 1);\n  };\n  for (let i = 0; i < count; i++) {\n    numbers.push(i + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"click number \", challenge]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numbers\",\n      children: numbers.map(n => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => getNumber(e),\n        id: n,\n        className: correctGuess && guess === n ? \"right\" : !correctGuess && guess === n ? \"wrong\" : \"\",\n        children: [\" \", n]\n      }, n, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), numberOfGuesses > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: correctGuess ? \"Right\" : \"Wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true);\n};\n_s(Numbers, \"fkpQ+YTr1YrCMU5+bZVo96FiV04=\");\n_c = Numbers;\nvar _c;\n$RefreshReg$(_c, \"Numbers\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Numbers","_s","correctGuess","setCorrectGuess","guess","setGuess","numberOfGuesses","setNumberOfGuesses","count","numbers","challenge","setAnswer","getNumber","e","parseInt","target","id","prev","i","push","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","n","onClick","_c","$RefreshReg$"],"sources":["/Users/joefuentes/Work/Sandbox/numbers-game/src/Numbers.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport \"./Numbers.css\";\n\n\nexport const Numbers = () => {\n    const [correctGuess, setCorrectGuess] = useState(null)\n    const [guess, setGuess] = useState(null)\n    const [numberOfGuesses, setNumberOfGuesses] = useState(0)\n    const count = 9;\n    const numbers = [];\n    const challenge = 4;\n\n    useEffect(() => {\n        if (numberOfGuesses >= 3) {\n            setNumberOfGuesses(0)\n            setAnswer(challenge)\n        }\n    }, [numberOfGuesses])\n    const getNumber = e => {\n        setCorrectGuess(parseInt(e.target.id) === challenge)\n        setGuess(parseInt(e.target.id))\n        setNumberOfGuesses(prev => prev + 1)\n    }\n    for (let i = 0; i < count; i++) {\n        numbers.push(i + 1)\n    }\n    return (\n        <>\n            <h1>numbers</h1>\n            <p>click number {challenge}</p>\n            <div className=\"numbers\">\n                {numbers.map(n =>\n                    <button onClick={e => getNumber(e)} id={n} key={n}\n                        className={correctGuess && guess === (n) ? \"right\" : !correctGuess && guess === (n) ? \"wrong\" : \"\"}> {n}\n                    </button>\n                )}\n            </div>\n            {numberOfGuesses > 0 && <div>{correctGuess ? \"Right\" : \"Wrong\"}</div>}\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGvB,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAMc,KAAK,GAAG,CAAC;EACf,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,SAAS,GAAG,CAAC;EAEnBf,SAAS,CAAC,MAAM;IACZ,IAAIW,eAAe,IAAI,CAAC,EAAE;MACtBC,kBAAkB,CAAC,CAAC,CAAC;MACrBI,SAAS,CAACD,SAAS,CAAC;IACxB;EACJ,CAAC,EAAE,CAACJ,eAAe,CAAC,CAAC;EACrB,MAAMM,SAAS,GAAGC,CAAC,IAAI;IACnBV,eAAe,CAACW,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,EAAE,CAAC,KAAKN,SAAS,CAAC;IACpDL,QAAQ,CAACS,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,EAAE,CAAC,CAAC;IAC/BT,kBAAkB,CAACU,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EACxC,CAAC;EACD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,EAAEU,CAAC,EAAE,EAAE;IAC5BT,OAAO,CAACU,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC;EACvB;EACA,oBACIrB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB3B,OAAA;MAAAuB,QAAA,GAAG,eAAa,EAACV,SAAS;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B3B,OAAA;MAAK4B,SAAS,EAAC,SAAS;MAAAL,QAAA,EACnBX,OAAO,CAACiB,GAAG,CAACC,CAAC,iBACV9B,OAAA;QAAQ+B,OAAO,EAAEf,CAAC,IAAID,SAAS,CAACC,CAAC,CAAE;QAACG,EAAE,EAAEW,CAAE;QACtCF,SAAS,EAAEvB,YAAY,IAAIE,KAAK,KAAMuB,CAAE,GAAG,OAAO,GAAG,CAACzB,YAAY,IAAIE,KAAK,KAAMuB,CAAE,GAAG,OAAO,GAAG,EAAG;QAAAP,QAAA,GAAC,GAAC,EAACO,CAAC;MAAA,GAD3DA,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzC,CACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACLlB,eAAe,GAAG,CAAC,iBAAIT,OAAA;MAAAuB,QAAA,EAAMlB,YAAY,GAAG,OAAO,GAAG;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACvE,CAAC;AAEX,CAAC;AAAAvB,EAAA,CApCYD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}